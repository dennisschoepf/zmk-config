#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define RAISE   1
#define LOWER   2
#define SYS     3
#define LOCK    4

&mt {
    quick-tap-ms = <100>;
    tapping-term-ms = <220>;
    flavor = "tap-preferred";
};

&lt {
    quick-tap-ms = <100>;
    tapping-term-ms = <220>;
    flavor = "hold-preferred";
};

/ {
    macros {
        tmux_one: tmux_one {
            label = "tmux prefix";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LC(B)>
                , <&macro_tap &kp NUMBER_1>
                ;
        };

        tmux_two: tmux_two {
            label = "tmux prefix";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LC(B)>
                , <&macro_tap &kp NUMBER_2>
                ;
        };

        tmux_three: tmux_three {
            label = "tmux prefix";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LC(B)>
                , <&macro_tap &kp NUMBER_3>
                ;
        };

        tmux_four: tmux_four {
            label = "tmux prefix";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LC(B)>
                , <&macro_tap &kp NUMBER_4>
                ;
        };

        tmux_five: tmux_five {
            label = "tmux prefix";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LC(B)>
                , <&macro_tap &kp NUMBER_5>
                ;
        };

        tmux_six: tmux_six {
            label = "tmux prefix";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LC(B)>
                , <&macro_tap &kp NUMBER_6>
                ;
        };

        arrow_fun: arrow_fun {
            label = "arrow fun";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&kp EQUAL &kp GT &kp SPACE>;
        };

        tag_close: tag_close {
            label = "tag close";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&kp FSLH &kp GT>;
        };

        tmux_copy_mode: tmux_copy_mode {
            label = "tmux copy mode";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LC(B)>
                , <&macro_tap &kp LBKT>
                ;
        };

    };
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_lock {
            timeout-ms = <50>;
            key-positions = <1 10>;
            bindings = <&tog LOCK>;
        };
        combo_unlock {
            timeout-ms = <1000>;
            key-positions = <1 10>;
            layers = <LOCK>;
            bindings = <&tog LOCK>;
        };

    };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <SYS>;
        };
    };
}; 

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp TAB       &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O        &kp P         &kp LALT(x)
   &mt LCTRL ESC &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L        &mt RALT SEMI &mt LALT SQT
   &kp LALT      &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT      &kp FSLH      &kp LC(B)
              &sk LSHFT &mo LOWER &mt LGUI RET   &mt LCTRL SPACE &mo RAISE &kp BSPC
                        >;
                };

                raise_layer {
                        bindings = <
   &trans &kp HASH  &kp DOLLAR &kp LBKT &kp RBKT &kp BSLH     &kp DQT    &kp PLUS  &kp UNDER &arrow_fun &tag_close &trans
   &trans &kp EXCL  &kp AT     &kp LPAR &kp RPAR &kp AMPS     &kp APOS   &kp EQUAL &kp MINUS &kp TILDE  &kp COLON  &kp DQT
   &trans &kp PRCNT &kp CARET  &kp LBRC &kp RBRC &kp PIPE     &kp GRAVE  &kp STAR  &kp LT    &kp GT     &kp QMARK  &trans
                                   &trans &trans &trans       &trans &trans &trans
                        >;
                };

                lower_layer {
                        bindings = <
   &trans &trans &kp N7 &kp N8 &kp N9 &trans   &kp LG(NUMBER_1) &kp LG(NUMBER_2) &kp LG(NUMBER_3) &kp LG(NUMBER_4) &kp LG(NUMBER_5) &kp LG(NUMBER_6)
   &trans &trans &kp N4 &kp N5 &kp N6 &trans   &kp LEFT             &kp DOWN             &kp UP               &kp RIGHT            &kp LC(B)            &trans
   &trans &kp N0 &kp N1 &kp N2 &kp N3 &trans   &kp LA(NUMBER_1)     &kp LA(NUMBER_2)     &kp LA(NUMBER_3)     &kp LA(NUMBER_4)     &kp LA(NUMBER_5)     &kp LA(NUMBER_6)
                        &trans &trans &trans   &trans &trans &trans
                        >;
                };

                sys_layer {
                        bindings = <
   &kp F1     &kp F2       &kp F3       &kp F4       &kp F5       &kp F6         &kp F7       &kp F8       &kp F9       &kp F10 &kp F11            &kp F12
   &trans     &trans       &trans       &kp C_BRI_DN &kp C_BRI_UP &trans         &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP &trans  &trans             &trans
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &out OUT_TOG &trans       &trans       &trans  &ext_power EP_TOG  &bl BL_OFF
                                        &trans       &trans       &trans         &trans &trans &trans
                        >;
                };

                lock_layer {
                        bindings = <
   &none &trans &none &none &none &none   &none &none &none &none &trans &none
   &none &none  &none &none &none &none   &none &none &none &none &none  &none
   &none &none  &none &none &none &none   &none &none &none &none &none  &none
                      &none &none &none   &none &none &none
                        >;
                };
        };
};
